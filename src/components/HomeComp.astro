---
import Image from 'astro/components/Image.astro';

interface Props {
    Title: string;
    num: string;
    year: string;
    Category: string;
    link: string;
    images?: ImageMetadata[]; 
}


const { Title, num, year, Category, link, images = [] } = Astro.props;
---

<div x-data="{ openGallery: false }" class="group no-scrollbar">
    <div class="grid grid-cols-2 sm:grid-cols-12 info leading-tight max-sm:py-2">
        <p class="col-span-1 ">[{num}]</p>
        <div class="col-span-1 sm:col-span-8">

            <a href={link} class="it uppercase link" @click.prevent="openGallery = !openGallery">
                {Title}
            </a>
        </div>
        <div class="col-span-1 sm:hidden"></div>
        <p class="col-span-1 sm:col-span-2">{Category}</p>
        <div class="col-span-1 sm:hidden"></div>
        <p class="col-span-1 sm:justify-self-end">{year}</p>
    </div>

    <div x-show="openGallery" x-cloak x-transition.opacity.duration.200ms class=" flex overflow-x-auto space-x-2 no-scrollbar">
        {images?.map((img, index) => (
            <Image 
                src={img} 
                alt={`Image ${index + 1}`} 
                width={1080} 
                height={1080} 
                format='webp'
                class="aspect-video object-cover w-[calc(75%-8px)]" 
            />
        ))}
    </div>
</div>

<script is:inline>
    document.addEventListener('DOMContentLoaded', function() {
        const components = document.querySelectorAll('.group');

        components.forEach(component => {
            const linkElement = component.querySelector('.link');
            const infoElement = component.querySelector('.info');
            const imgElement = component.querySelector('.img');

            linkElement.addEventListener('mouseenter', () => {
                infoElement.classList.add('opacity-40');
                imgElement?.classList.remove('hidden');
                imgElement?.classList.add('block');
            });

            linkElement.addEventListener('mouseleave', () => {
                infoElement.classList.remove('opacity-40');
                imgElement?.classList.remove('block');
                imgElement?.classList.add('hidden');
            });
        });
    });
</script>
