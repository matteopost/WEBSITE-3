---
interface Props {
    Title: string;
    num: string;
    year: string;
    img: string;
    Category: string;
    link: string;

}

const { Title, num, year, img, Category, link,  } = Astro.props;
---
<!-- FIRST TRY -->
<!-- <div class="grid grid-cols-1 sm:grid-cols-2 gap-1 sm:gap-2 leading-tight group mb-2 sm:mb-4">
    <div class="grid grid-cols-6 gap-2 info">
        <p class="col-span-1 ">[{num}]</p>
        <div class="col-span-3">
            <a href={link} class="uppercase  link">
                {title}
            </a>
        </div>

        <div class="col-span-2 flex justify-between">
            <p class="">{category}</p>
            <p class="">{year}</p>
        </div>
    </div>
    <div>
        <img src={img} alt={img} class="w-1/3 sm:w-1/2 sm:ml-auto transition-all duration-100  " />
        <div class="realtive w-1/2 ml-auto">
            <img src={img} alt={img} class="absolute w-1/4 transition-all duration-100 hidden p-1 img " />
        </div>
    </div>
</div> -->

<div class="group">
    <div class="grid grid-cols-2 sm:grid-cols-12 info leading-tight max-sm:py-2">
        <p class="col-span-1 ">[{num}]</p>
        <div class="col-span-1 sm:col-span-8">
            <a href={link} class="it uppercase link">
                {Title}
            </a>
        </div>
        <div class="col-span-1 sm:hidden"></div>
        <p class="col-span-1 sm:col-span-2 ">{Category}</p>
        <div class="col-span-1 sm:hidden"></div>
        <p class="col-span-1  sm:justify-self-end">{year}</p>
    </div>
</div>



<script is:inline>
    document.addEventListener('DOMContentLoaded', function() {
        const components = document.querySelectorAll('.group');

        components.forEach(component => {
            const linkElement = component.querySelector('.link');
            const infoElement = component.querySelector('.info');
            const imgElement = component.querySelector('.img');

            linkElement.addEventListener('mouseenter', () => {
                infoElement.classList.add('opacity-40');
                imgElement.classList.remove('hidden');
                imgElement.classList.add('block');
            });

            linkElement.addEventListener('mouseleave', () => {
                infoElement.classList.remove('opacity-40');
                imgElement.classList.remove('block');
                imgElement.classList.add('hidden');
            });
        });
    });
</script>
